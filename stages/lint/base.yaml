.lint:
  stage: lint
  image: ${GITLAB_INTERNAL_REGISTRY}/ironbank-tools/ironbank-pipeline/jenkins-oscap-agent:1.1
  
  dependencies:
    - load scripts
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - ${CI_PROJECT_DIR}/pipeline-artifacts/

# OPTIONAL FOR BETA PIPELINE
# yaml lint:
#   extends: .lint
#   # the hardened image we have access to comes with pip installed
#   except:
#     variables:
#       - $YAML_LINT_DISABLED
#   before_script:
#     - pip3 install --upgrade pip
#     - pip3 install yamllint
#     - mkdir -p ${CI_PROJECT_DIR}/pipeline-artifacts/
#   # TODO: get more insight into following commands and intention
#   script:
#     - yamllint -c ${CI_PROJECT_DIR}/tests/yamllint.yaml ${CI_PROJECT_DIR}/tests/hadolint.yaml | tee ${CI_PROJECT_DIR}/pipeline-artifacts/lint-yaml.txt
#     - yamllint -c ${CI_PROJECT_DIR}/tests/yamllint.yaml ${CI_PROJECT_DIR}/tests/container-structure-test.yaml | tee ${CI_PROJECT_DIR}/pipeline-artifacts/lint-yaml.txt

# # OPTIONAL FOR BETA PIPELINE
# dockerfile lint:
#   extends: .lint
#   except:
#     variables:
#       - $DOCKERFILE_LINT_DISABLED
#   before_script:
#     # https://hub.docker.com/r/hadolint/hadolint/dockerfile
#     - docker pull hadolint/hadolint
#     - chmod +x /bin/hadolint
#     - mkdir -p ${CI_PROJECT_DIR}/pipeline-artifacts
#   script:
#     - hadolint ${CI_PROJECT_DIR}/Dockerfile | tee ${CI_PROJECT_DIR}/pipeline-artifacts/lint-dockerfile.txt

wl compare lint:
  extends: .lint
  dependencies:
    - load scripts
  script:
    # The following step assumes contributor projects have an environment variable set for the image version
    # in the gitlab-ci.yml file.
    # TODO: output the error for unsuccessful runs
    - touch lint.env
    - python3 "${PIPELINE_REPO_DIR}/stages/lint/wl_compare_lint.py" --image ${CI_PROJECT_PATH} --tag ${IMG_VERSION} --glkey "${PYTHON_GL_KEY}" --wlbranch "pipeline-test-project"
    - cat lint.env
  artifacts:
    paths: []
    reports:
      dotenv: lint.env

