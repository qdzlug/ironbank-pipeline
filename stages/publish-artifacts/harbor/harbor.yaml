harbor-x86:
  stage: publish-artifacts
  extends:
    - .setup_modules
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  resource_group: harbor_phase
  needs:
    - load-scripts
    - lint
    - build-x86
    - create-sbom-x86
    - scan-logic-x86
    - vat-x86
  variables:
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: sign
    ACCESS_LOG_DIR: ${ARTIFACT_STORAGE}/build
    ARTIFACT_DIR: ${ARTIFACT_STORAGE}/harbor
    PARENT_VAT_RESPONSE: ${ARTIFACT_STORAGE}/vat/parent_vat_response.json
    SBOM_DIR: ${ARTIFACT_STORAGE}/sbom
    VAT_RESPONSE: ${ARTIFACT_STORAGE}/vat/vat_response.json
  script:
    - 'mkdir -p "${ARTIFACT_DIR}"'
    - 'python3 "${PIPELINE_REPO_DIR}/stages/publish-artifacts/harbor/upload_to_harbor.py"'
  artifacts:
    when: always
    paths:
      - "${ARTIFACT_DIR}/"
  retry:
    max: 2
    when: always

update-staging-attestations-x86:
  stage: publish-artifacts
  extends:
    - .setup_modules
  rules:
    - if: $CI_COMMIT_BRANCH != "master" && $PUBLISH_VAT_STAGING_PREDICATES
  resource_group: harbor_phase
  needs:
    - load-scripts
    - lint
    - build-x86
    - create-sbom-x86
    - scan-logic-x86
    - vat-x86
  variables:
    ACCESS_LOG_DIR: ${ARTIFACT_STORAGE}/build
    ARTIFACT_DIR: ${ARTIFACT_STORAGE}/harbor
    PARENT_VAT_RESPONSE: ${ARTIFACT_STORAGE}/vat/parent_vat_response.json
    SBOM_DIR: ${ARTIFACT_STORAGE}/sbom
    VAT_RESPONSE: ${ARTIFACT_STORAGE}/vat/vat_response.json
  script:
    - 'mkdir -p "${ARTIFACT_DIR}"'
    - 'python3 "${PIPELINE_REPO_DIR}/stages/publish-artifacts/harbor/upload_to_harbor.py"'
  artifacts:
    when: always
    paths:
      - "${ARTIFACT_DIR}/"
  retry:
    max: 2
    when: always

harbor-arm64:
  stage: publish-artifacts
  extends:
    - .setup_modules
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  resource_group: harbor_phase
  needs:
    - load-scripts
    - lint
    - build-arm64
    - create-sbom-arm64
    - scan-logic-arm64
    - vat-arm64
  variables:
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: sign
    ACCESS_LOG_DIR: ${ARTIFACT_STORAGE}/build
    ARTIFACT_DIR: ${ARTIFACT_STORAGE}/harbor
    PARENT_VAT_RESPONSE: ${ARTIFACT_STORAGE}/vat/parent_vat_response.json
    SBOM_DIR: ${ARTIFACT_STORAGE}/sbom
    VAT_RESPONSE: ${ARTIFACT_STORAGE}/vat/vat_response.json
  script:
    - 'mkdir -p "${ARTIFACT_DIR}"'
    - 'python3 "${PIPELINE_REPO_DIR}/stages/publish-artifacts/harbor/upload_to_harbor.py"'
  artifacts:
    when: always
    paths:
      - "${ARTIFACT_DIR}/"
  retry:
    max: 2
    when: always

update-staging-attestations-arm64:
  stage: publish-artifacts
  extends:
    - .setup_modules
  rules:
    - if: $CI_COMMIT_BRANCH != "master" && $PUBLISH_VAT_STAGING_PREDICATES
  resource_group: harbor_phase
  needs:
    - load-scripts
    - lint
    - build-arm64
    - create-sbom-arm64
    - scan-logic-arm64
    - vat-arm64
  variables:
    ACCESS_LOG_DIR: ${ARTIFACT_STORAGE}/build
    ARTIFACT_DIR: ${ARTIFACT_STORAGE}/harbor
    PARENT_VAT_RESPONSE: ${ARTIFACT_STORAGE}/vat/parent_vat_response.json
    SBOM_DIR: ${ARTIFACT_STORAGE}/sbom
    VAT_RESPONSE: ${ARTIFACT_STORAGE}/vat/vat_response.json
  script:
    - 'mkdir -p "${ARTIFACT_DIR}"'
    - 'python3 "${PIPELINE_REPO_DIR}/stages/publish-artifacts/harbor/upload_to_harbor.py"'
  artifacts:
    when: always
    paths:
      - "${ARTIFACT_DIR}/"
  retry:
    max: 2
    when: always