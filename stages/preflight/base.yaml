.preflight:
  stage: preflight

  dependencies:
    - load scripts

# TODO: Possibly check for deployment files?
folder structure:
  extends: .preflight
  script:
    - |
      if ! [[ -f README.md ]]; then
        echo "README.md not found"
        exit 1
      fi
      if ! [[ -f Dockerfile ]]; then
        echo "Dockerfile not found"
        exit 1
      fi
      if ! [[ -f "LICENSE" || -f "LICENSE.md" || -f "LICENSE.txt" || -f "LICENSE.adoc" ]]; then
        echo "LICENSE not found"
        exit 1
      fi

hardening_manifest migration:
  extends: .preflight
  allow_failure: true # Allow missing hardening_manifest.yaml to be autogenerated for now
  script:
    - |
      if ! [[ -f hardening_manifest.yaml ]]; then
        echo "hardening_manifest.yaml not found, file will be autogenerated"
        exit 1
      fi

      grep -q Dockerfile '\w*LABEL'

# build variables:
#   extends: folder structure
#   script:
#     - '"${PIPELINE_REPO_DIR}/stages/preflight/check_base_vars.sh"'

hardening_manifest:
  extends: .preflight
  variables:
    ARTIFACT_DIR: "${ARTIFACT_STORAGE}/preflight"
  script:
    - mkdir -p "${ARTIFACT_STORAGE}/preflight"
    - pip3 install jsonschema
    - python3 "${PIPELINE_REPO_DIR}/stages/preflight/metadata.py"
  artifacts:
    when: always
    paths:
      - "${ARTIFACT_DIR}/"
    expire_in: 1 week
    reports:
      dotenv: "${ARTIFACT_DIR}/variables.env"
