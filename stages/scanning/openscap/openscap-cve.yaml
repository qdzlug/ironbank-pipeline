openscap cve rhel:
  stage: scanning
  extends: .scanning
  before_script:
    - "${PIPELINE_REPO_DIR}/stages/scanning/openscap/base_image_type.sh"
    - BASE_IMAGE_TYPE_SHORT = $(echo ${BASE_IMAGE_TYPE} | cut -d- -f1 | sed 's/[0-9]//g')
    - export BASE_IMAGE_TYPE_SHORT
  rules:
    - if: $BASE_IMAGE_TYPE_SHORT != "ubi"
      when: never
    - if: '$DISTROLESS == "1"'
      when: never
  # Load in the IMG_VERSION variable from load scripts env
  dependencies:
    - load scripts
    - build
  variables:
    ARTIFACT_DIR: "${ARTIFACT_STORAGE}/scan-results/openscap"
  script:
    - '"${PIPELINE_REPO_DIR}/stages/scanning/openscap/oscap-cve-run.sh"'
  artifacts:
    when: always
    paths:
      - "${ARTIFACT_DIR}"
    reports:
      dotenv: oscap-cve.env

openscap cve ubuntu:
  stage: scanning
  extends: .scanning
  before_script:
    - "${PIPELINE_REPO_DIR}/stages/scanning/openscap/base_image_type.sh"
    - BASE_IMAGE_TYPE_SHORT = $(echo ${BASE_IMAGE_TYPE} | cut -d- -f1 | sed 's/[0-9]//g')
    - export BASE_IMAGE_TYPE_SHORT
  image: ${GITLAB_INTERNAL_REGISTRY}/ironbank-tools/ironbank-pipeline/ubupodscap1804:1.3.2
  rules:
    - if: $BASE_IMAGE_TYPE_SHORT != "ubuntu"
      when: never
    - if: '$DISTROLESS == "1"'
      when: never
  # Load in the IMG_VERSION variable from load scripts env
  dependencies:
    - load scripts
    - build
  variables:
    ARTIFACT_DIR: "${ARTIFACT_STORAGE}/scan-results/openscap"
  script:
    - '"${PIPELINE_REPO_DIR}/stages/scanning/openscap/oscap-cve-run.sh"'
  artifacts:
    when: always
    paths:
      - "${ARTIFACT_DIR}"
    reports:
      dotenv: oscap-cve.env
