openscap cve rhel:
  stage: scanning
  extends: .scanning
  except:
    variables:
      - $DISTROLESS
  # Load in the IMG_VERSION variable from load scripts env
  dependencies:
    - load scripts
    - build
  variables:
    ARTIFACT_DIR: "${ARTIFACT_STORAGE}/scan-results/openscap"
  script:
    - '"${PIPELINE_REPO_DIR}/stages/scanning/oscap-cve-run.sh"'
  artifacts:
    when: always
    paths:
      - "${ARTIFACT_DIR}"
    reports:
      dotenv: oscap-cve.env

openscap cve ubuntu:
  stage: scanning
  extends: .scanning
  image: ${GITLAB_INTERNAL_REGISTRY}/ironbank-tools/ironbank-pipeline/ubupodscap1804:1.3.2
  before_script:
  - DOCKER_IMAGE_PATH=$(podman load -i "${ARTIFACT_STORAGE}/build/${CI_PROJECT_NAME}-${CI_PIPELINE_ID}.tar" | awk '{print $3}')
  - export DOCKER_IMAGE_PATH
  - BASE_IMAGE_TYPE=$(podman inspect -f '{{index .Labels "com.redhat.component"}}' "${DOCKER_IMAGE_PATH}")
  - |
    if [[ "${BASE_IMAGE_TYPE}" == "" ]]; then
      BASE_IMAGE_TYPE=$(podman inspect -f '{{index .Labels "os_type"}}' "${DOCKER_IMAGE_PATH}")
      if [[ "${BASE_IMAGE_TYPE}" == "" ]]; then
        BASE_IMAGE_TYPE=$(podman inspect -f '{{index .Labels "mil.dso.ironbank.os-type"}}' "${DOCKER_IMAGE_PATH}")
        if [[ "${BASE_IMAGE_TYPE}" == "" ]]; then
          LABELS=$(podman inspect -f '{{index .Labels}}' "${DOCKER_IMAGE_PATH}")
          echo "Unknown image type. Can't choose security guide. labels: ${LABELS}"
          exit 1
        fi
      fi
    fi
  - export BASE_IMAGE_PATH
  rules:
    if: '$(echo ${base_image_type} | cut -d- -f1 | sed 's/[0-9]//g') != "ubuntu"'
    when: never
  except:
    variables:
      - $DISTROLESS
  # Load in the IMG_VERSION variable from load scripts env
  dependencies:
    - load scripts
    - build
  variables:
    ARTIFACT_DIR: "${ARTIFACT_STORAGE}/scan-results/openscap"
  script:
    - '"${PIPELINE_REPO_DIR}/stages/scanning/oscap-cve-run.sh"'
  artifacts:
    when: always
    paths:
      - "${ARTIFACT_DIR}"
    reports:
      dotenv: oscap-cve.env