openscap compliance rhel:
  extends: .scanning
  stage: scanning
  except:
    variables:
      - $DISTROLESS
  variables:
    OSCAP_SCANS: "${ARTIFACT_STORAGE}/scan-results/openscap"
    OSCAP_FILENAME: "${OSCAP_HTML_FILENAME}"
  # Load in the IMG_VERSION variable from load scripts env
  dependencies:
    - load scripts
    - build
  script:
    - '"${PIPELINE_REPO_DIR}/stages/scanning/oscap-compliance-run.sh"'
  artifacts:
    when: always
    paths:
      - "${OSCAP_SCANS}"
    reports:
      dotenv: oscap-compliance.env

    expire_in: 1 week

openscap compliance ubuntu:
  extends: .scanning
  stage: scanning
  image: ${GITLAB_INTERNAL_REGISTRY}/ironbank-tools/ironbank-pipeline/ubupodscap1804:1.3.2
  before_script:
  - DOCKER_IMAGE_PATH=$(podman load -i "${ARTIFACT_STORAGE}"/build/"${CI_PROJECT_NAME}"-"${CI_PIPELINE_ID}".tar | awk '{print $3}')
  - export ${DOCKER_IMAGE_PATH}
  - base_image_type=$(podman inspect -f '{{index .Labels "com.redhat.component"}}' "${DOCKER_IMAGE_PATH}")
  - |
    if [[ "${base_image_type}" == "" ]]; then
      base_image_type=$(podman inspect -f '{{index .Labels "os_type"}}' "${DOCKER_IMAGE_PATH}")
      if [[ "${base_image_type}" == "" ]]; then
        base_image_type=$(podman inspect -f '{{index .Labels "mil.dso.ironbank.os-type"}}' "${DOCKER_IMAGE_PATH}")
        if [[ "${base_image_type}" == "" ]]; then
          labels=$(podman inspect -f '{{index .Labels}}' "${DOCKER_IMAGE_PATH}")
          echo "Unknown image type. Can't choose security guide. labels: ${labels}"
          exit 1
        fi
      fi
    fi
  - export ${base_image_type}
  rules:
    if: '$(echo ${base_image_type} | cut -d- -f1 | sed 's/[0-9]//g') != "ubuntu'
    when: never
  except:
    variables:
      - $DISTROLESS
  variables:
    OSCAP_SCANS: "${ARTIFACT_STORAGE}/scan-results/openscap"
    OSCAP_FILENAME: "${OSCAP_HTML_FILENAME}"
  # Load in the IMG_VERSION variable from load scripts env
  dependencies:
    - load scripts
    - build
  script:
    - '"${PIPELINE_REPO_DIR}/stages/scanning/oscap-compliance-run.sh"'
  artifacts:
    when: always
    paths:
      - "${OSCAP_SCANS}"
    reports:
      dotenv: oscap-compliance.env

    expire_in: 1 week