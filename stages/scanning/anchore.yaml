anchore scan:
  extends: .scanning
  stage: scanning
  image: ${GITLAB_INTERNAL_REGISTRY}/dsop/ironbank-pipeline/jenkins-oscap-agent:1.1
  variables:
    # put all scan outputs in the scan-results folder
    ANCHORE_SCANS: ${ARTIFACT_STORAGE}/scan-results/anchore
  before_script:
    - mkdir -p "${ANCHORE_SCANS}"
    - pip3 install --user --upgrade anchorecli
    - export ANCHORE_CLI_PATH="$(python3 -m site --user-base)/bin"
    - export DOCKER_IMAGE_PATH="$(podman load -q -i ${ARTIFACT_STORAGE}/build/${CI_PROJECT_NAME}-${IMG_VERSION}.tar | awk '{print $3}')"
  script:
    - "${ANCHORE_CLI_PATH}"/anchore-cli --u "${anchore_username}" --p "${anchore_password}" --url "${anchore_server_address}" image add "${DOCKER_IMAGE_PATH}"
    - "${ANCHORE_CLI_PATH}"/anchore-cli --u "${anchore_username}" --p "${anchore_password}" --url "${anchore_server_address}" image wait "${DOCKER_IMAGE_PATH}"
    - python3 "${PIPELINE_REPO_DIR}"/stages/scanning/anchore_scan.py --u "${anchore_username}" --p "${anchore_password}" --url "${anchore_server_address}" --image "${DOCKER_IMAGE_PATH}" --output "${ANCHORE_SCANS}"
    # - cp -f ${PIPELINE_REPO_DIR}/stages/scanning/anchore_gates.json ${ANCHORE_SCANS}/
    # - cp -f ${PIPELINE_REPO_DIR}/stages/scanning/anchore_security.json ${ANCHORE_SCANS}/
  artifacts:
    when: always
    paths:
      - ${ANCHORE_SCANS}/

# TODO: Install the anchore-cli on the runner
# TODO: Configure the anchore-cli path on the runner
#  steps

#  retrieve current anchore version as needed

# add image to anchore cli, authenticate with creds

# use pipeline_anchore_vuln_report_gen.py to generate anchore report

# archive artifacts as needed (such as anchore version text file - i.e. the stuff used by VAT and IBFE)
