# include:
#   - local: stages/scanning/base.yaml

twistlock scan:
  extends: .scanning
  allow_failure: true
  image: ${REGISTRY_URL}/redhat/python/python36:3.6
  variables:
    # put all scan outputs in the scan-results folder
    TWISTLOCK_SCANS: ${ARTIFACT_STORAGE}/scan-results/twistlock
  before_script:
    - mkdir -p "${TWISTLOCK_SCANS}"
  script:
    - python3 ${PIPELINE_REPO_DIR}/stages/scanning/prisma_scan.py
  artifacts:
    when: always
    paths:
      - ${TWISTLOCK_SCANS}/
# utilize python image

# point to the Twistlock server address

# use twistlock credentials to authenticate

# using the prisma_scan.py file, query the Twistlock server and provide the image of interest and capture scan results

# pass along Twistlock scan results to later stages to publish