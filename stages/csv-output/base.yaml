csv output:
  stage: csv output

  image: "${BASE_REGISTRY}/redhat/python/python36:3.6"
  dependencies:
    - twistlock scan
    - openscap cve
    - openscap compliance
    - anchore scan
    - load scripts
  variables:
    # Put generated csv report in the scan-results folder
    CSV_REPORT: "${ARTIFACT_STORAGE}/scan-results/csvs/"
  before_script:
    - mkdir -p "${CSV_REPORT}"
    - pip3 install --upgrade pip
    - pip3 install bs4 pandas argparse openpyxl
  script:
    - |
      if [[ $DISTROLESS ]]; then
          python3 "${PIPELINE_REPO_DIR}/stages/csv-output/pipeline_csv_gen.py" \
            --twistlock "${ARTIFACT_STORAGE}/scan-results/twistlock/${IMG_VERSION}.json" \
            --anchore-sec "${ARTIFACT_STORAGE}/scan-results/anchore/anchore_security.json" \
            --anchore-gates "${ARTIFACT_STORAGE}/scan-results/anchore/anchore_gates.json" \
            --output-dir "${CSV_REPORT}"
        else
          python3 "${PIPELINE_REPO_DIR}/stages/csv-output/pipeline_csv_gen.py" \
            --oscap "${ARTIFACT_STORAGE}/scan-results/openscap/report.html" \
            --oval "${ARTIFACT_STORAGE}/scan-results/openscap/report-cve.html" \
            --twistlock "${ARTIFACT_STORAGE}/scan-results/twistlock/${IMG_VERSION}.json" \
            --anchore-sec "${ARTIFACT_STORAGE}/scan-results/anchore/anchore_security.json" \
            --anchore-gates "${ARTIFACT_STORAGE}/scan-results/anchore/anchore_gates.json" \
            --output-dir "${CSV_REPORT}"
      fi
  artifacts:
    when: always
    paths:
      - "${CSV_REPORT}"
    expire_in: 1 week

