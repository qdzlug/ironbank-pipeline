publish:
  stage: publish
  allow_failure: true
  image: ${GITLAB_INTERNAL_REGISTRY}/dsop/ironbank-pipeline/all-in-one-fedora:1.0
  variables:
    IMAGE_FILE: ${CI_PROJECT_NAME}-${IMG_VERSION}
    IMAGE_SIG_FILE: ${CI_PROJECT_NAME}-${IMG_VERSION}
  dependencies:
    - build
  before_script:
    - podman load -i ${ARTIFACT_STORAGE}/build/${IMAGE_FILE}.tar ${STAGING_REGISTRY_URL}/${IM_NAME}:${IMG_VERSION}
    - podman images
      #- tar -xvf ${ARTIFACT_STORAGE}/build/${IMAGE_FILE}.tar manifest.json
    - echo ${IB_CONTAINER_GPG_KEY} | base64 -d > key
    - mkdir -p tmp_gpg
  script:
    - skopeo copy --src-authfile ${DOCKER_AUTH_CONFIG_STAGING} --dest-authfile ${DOCKER_AUTH_CONFIG_TEST} docker://${STAGING_REGISTRY_URL}/${IM_NAME}:${IMG_VERSION} docker://${TEST_REGISTRY_URL}/${IM_NAME}:${IMG_VERSION}
    - gpg --homedir ./tmp_gpg --import --batch --passphrase ${IB_CONTAINER_SIG_KEY_PASSPHRASE} key
    - echo "pinentry-mode loopback" >> ./tmp_gpg/gpg.conf
    - gpg --detach-sign --homedir ./tmp_gpg -o ${IMAGE_SIG_FILE}.sig --armor --yes --batch --passphrase ${IB_CONTAINER_SIG_KEY_PASSPHRASE} ${ARTIFACT_STORAGE}/build/${IMAGE_FILE}.tar
    - ls && ls tmp_gpg
    - GPG_VERSION=$(gpg --version | grep '(?<=gpg .GnuPG.)([^0-9]+)([0-9]+[.][0-9]+[.][0-9]+)' -oP)
    - IMAGE_TAR_SHA=$(sha256sum ${ARTIFACT_STORAGE}/build/${IMAGE_FILE}.tar | grep -E '^[a-zA-Z0-9]+' -o)
    - IMAGE_PODAMN_SHA=$(podman inspect --format {{'.Digest'}} ${STAGING_REGISTRY_URL}/${IM_NAME}:${IMG_VERSION})
    - echo $IMAGE_PODMAN_SHA
    - rm -rf tmp_gpg
    - |
      cat <<EOF > manifest.json
      {
        "critical": {
          "type": "atomic container signature",
          "image": {
            "podman-manifest-digest": "${IMAGE_PODMAN_SHA}",
            "image-tar-sha256-checksum": "${IMAGE_SHA}"
          },
          "identity": {
            "podman-reference": "${STAGING_REGISTRY_URL}/${IM_NAME}:${IMG_VERSION}"
          }
        },
        "optional": {
          "creator": "${GPG_VERSION}"
        }
      }
      EOF
    - cat manifest.json
