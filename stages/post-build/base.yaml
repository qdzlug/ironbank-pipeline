clamav image scan:
  stage: post-build
  allow_failure: true
  image: ${GITLAB_INTERNAL_REGISTRY}/dsop/ironbank-pipeline/clamav-podman:temp
  dependencies:
    - build
  variables:
    CLAMAV_SCANS: ${ARTIFACT_STORAGE}/post-build/clamav-image-scan
  before_script:
    - mkdir -p "${CLAMAV_SCANS}"
  script:
    - podman pull --authfile=${DOCKER_AUTH_CONFIG} registry1.dsop.io/ironbank/opensource/kubernetes-1.18/kubectl-1.18:latest
    - podman volume create img-fs
    - podman run -v img-fs:/img-fs registry1.dsop.io/ironbank/opensource/kubernetes-1.18/kubectl-1.18:latest cp -ax / /img-fs
    - podman run -it -v img-fs:/img-fs ${GITLAB_INTERNAL_REGISTRY}/dsop/ironbank-pipeline/clamav-podman:temp clamscan -ir /img-fs > output.txt
    - cat output.txt
    # - freshclam
    # - clamscan -irv vol > output.txt
    # - cat output.txt
    # - INFECTED_CONTAINER_FILES=$(grep -e "^Infected files:" ${CI_PROJECT_DIR}/pipeline-artifacts/report-clamav-container.txt | cut -d ' ' -f3)
    # - |
    #   if [ ${INFECTED_CONTAINER_FILES} -gt 0 ]
    #   then
    #     echo Malware detected in container! Number of findings: ${INFECTED_CONTAINER_FILES}
    #     exit 1
    #   fi
  artifacts:
    when: always
    paths:
      - ${ARTIFACT_STORAGE}/
