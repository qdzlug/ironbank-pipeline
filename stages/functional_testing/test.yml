test_image:
  stage: functional_testing
  # image: registry1.dso.mil/ironbank/ironbank-pipelines/pipeline-runner:v0.10.13
  variables:
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: "runtime"
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE_ALLOWED: ".*"
    NAMESPACE: "ironbank-runtime"
  # extends:
  #   - .setup_modules


  before_script:
      # - python -m pip install poetry==1.7.1 # temp solution to install poetry

  #   # - git clone -b ${PIPELINE_REPO_BRANCH} ${PIPELINE_REPO} ${PIPELINE_REPO_DESTINATION}
  #   # - ls -al ${PIPELINE_REPO_DESTINATION}
  #   - source ${PIPELINE_REPO_DIR}/stages/functional_testing/library/templates.sh
  #   # need to create secret for pod to pull from registry
  #   # - package_auth_setup
  #   #- pip3 install pyyaml do not need this because it is in the image itself
  #   - aws eks update-kubeconfig --name ib-zelda-runtime
  #   - kubectl config view
  #   #- setup_k8s_resources "functional-testing" # run this as admin (this is already setup by POPS)
  #   # - chmod +x ${PIPELINE_REPO_DIR}/stages/functional_testing/library/run_k8s_test.sh

  script: 
    # - python -m pip install pyyaml # temp solution to install pyyaml
    - source ${PIPELINE_REPO_DIR}/stages/functional_testing/library/templates.sh
    # - aws eks --region us-gov-west-1 update-kubeconfig --name ib-zelda-runtime
    # - kubectl config view
    # - kubectl get pods -n $NAMESPACE
    - setup_k8s_resources "$NAMESPACE"
    - ls -al 
    - echo ${PIPELINE_REPO_DIR}
    # - python3 ${PIPELINE_REPO_DIR}/stages/functional_testing/library/test.py $CI_PROJECT_DIR
    - python3 ${PIPELINE_REPO_DIR}/stages/functional_testing/library/test.py ./
    # Check if /tmp/podmanifest.yaml exists before running the next script
    - if [[ -f "/tmp/podmanifest.yaml" ]]; then ${PIPELINE_REPO_DIR}/stages/functional_testing/library/run_k8s_test.sh; fi
  rules:
    - exists:
        - testing_manifest.yaml
      when: always
    - when: never
  allow_failure: true
  tags: 
    # - ironbank-dsop-privileged
    - ironbank-dsop-ibec2
  needs:
    - load-scripts 
    # - lint 
    - import-artifacts
    - build
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - api_failure
      - unknown_failure
