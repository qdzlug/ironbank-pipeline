#!/usr/bin/env python3

import logging
import os
import json


# Get values generated by process_yaml() in metadata.py
# Currently used to retrieve keywords and tags
def source_values(source_file, key) -> list:
    num_vals = 0
    val_list = []
    if os.path.exists(source_file):
        with open(source_file, mode="r", encoding="utf-8") as sf:
            for line in sf:
                val_entry = line.strip()
                val_list.append(val_entry)
                num_vals += 1
        logging.info(f"Number of {key} detected: {num_vals}")
    else:
        logging.info(source_file + " does not exist")
    return val_list


def get_source_keys_values(source_file) -> dict:
    """
    Returns the labels from the hardening_manifest.yaml file as dictionary.
    Ignore keywords since IBFE already has an implementation for gathering keywords

    """
    hm_labels = {}
    if os.path.exists(source_file):
        with open(source_file, mode="r", encoding="utf-8") as sf:
            for line in sf:
                key, value = line.rstrip().split("=", 1)
                if key != "mil.dso.ironbank.image.keywords":
                    hm_labels[key] = value
    return hm_labels


def get_approval_status(source_file) -> tuple[str, str]:
    if os.path.exists(source_file):
        with open(source_file, mode="r", encoding="utf-8") as sf:
            approval_object = json.load(sf)
    approval_status = approval_object["IMAGE_APPROVAL_STATUS"]
    approval_text = approval_object["IMAGE_APPROVAL_TEXT"]
    return approval_status, approval_text
