# You can override the included template(s) by including variable overrides
# See https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#priority-of-environment-variables
image: "registry1.dso.mil/ironbank/ironbank-pipelines/pipeline-runner:v0.5.0"

stages:
  - secret-scanning
  - format
  - lint
  - test

trufflehog:
  needs: []
  tags:
    - ironbank-tools
  stage: secret-scanning
  image: registry1.dso.mil/ironbank/opensource/trufflehog/trufflehog3:3.0.5
  variables:
    # This forces the trufflehog job to NOT perform a shallow clone
    GIT_DEPTH: 0
  script:
    - python3 stages/lint/trufflehog.py

shellcheck:
  needs: []
  tags:
    - ironbank-tools
  stage: lint
  image: registry1.dso.mil/ironbank/ironbank-pipelines/shellcheck:v0.8.0
  script:
    - |
      set -o pipefail
      set +e # remove gitlab ci setting
      shopt -s nullglob
      files=()
      while IFS='' read -r -d '' line; do
          files+=("$line")
      done < <(find ./stages -name '*.sh' -print0)
      if [ -n "${files[0]}" ]
      then
        echo " Scanning shell scripts..."
        ( IFS=$'\n'; echo "${files[*]}" )
        shellcheck --exclude=SC2153 --format=gcc -- "${files[@]}"
        ret=$?
      fi

      echo "# Scanning embedded scripts..."
      while IFS= read -r -d '' file; do
        echo "# $file"
        yq -r '.[] | objects | .before_script, .script, .after_script | select(. != null) | join("\n")' "$file" | shellcheck --exclude=SC2153 --format=gcc -s bash -
        yq_ret=$?
        if [ $yq_ret -ne 0 ]
        then
          ret=$yq_ret
        fi
      done < <(find . \( -name '*.yaml' -o  -name '*.yml' ! -path './scripts/analysis/*' \) -print0)
      exit "$ret"

black:
  needs: []
  tags:
    - ironbank-tools
  stage: format
  script:
    - pip install --user black
    - black --check --diff --color -t py310 .

pylama:
  needs: []
  tags:
    - ironbank-tools
  stage: lint
  script:
    - pip install --user pylama
    - pylama
## ignore line errors as blacks has been ran against code.

prettier:
  needs: []
  tags:
    - ironbank-tools
  stage: format
  image: "registry1.dso.mil/ironbank/opensource/nodejs/nodejs14:14.19.1"
  script:
    - npx prettier -c .

shfmt:
  needs: []
  tags:
    - ironbank-tools
  stage: format
  image: "registry1.dso.mil/ironbank/redhat/ubi/ubi8:8.5"
  script:
    - dnf install wget -y
    - wget https://github.com/mvdan/sh/releases/download/v3.1.2/shfmt_v3.1.2_linux_amd64
    - chmod a+x shfmt_v3.1.2_linux_amd64
    - "./shfmt_v3.1.2_linux_amd64 -d ."

unit-testing:
  needs: []
  tags:
    - ironbank-tools
  stage: test
  script:
    - python3 -m pip install --user pytest-cov
    - python3 -m pip install --user dockerfile
    - python3 -m pytest -m "not slow"
  coverage: '/^TOTAL.+?(\d+\%)$/'
  variables:
    ARTIFACT_DIR: "stages/lint/tests/mock"
    CI_COMMIT_BRANCH: "development"
  artifacts:
    reports:
      cobertura: coverage.xml
      junit: report.xml
