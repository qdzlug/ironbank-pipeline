image: "registry1.dso.mil/ironbank/ironbank-pipelines/pipeline-runner:0.12.0"

stages:
  - load-scripts
  - code-check

variables:
  ARTIFACT_STORAGE: "ci-artifacts"
  MODULES_CLONE_DIR: "${ARTIFACT_STORAGE}/ironbank-modules"

.setup_modules:
  before_script:
    # activate virtual env before installing the modules
    # needed to ensure modules exist in the same env as their deps
    - 'source "$(poetry env info -C "${MODULES_CLONE_DIR}" --path)"/bin/activate'
    - 'poetry install -C "${MODULES_CLONE_DIR}/ironbank" --only-root'

load-scripts:
  stage: load-scripts
  script:
    - 'echo "Pulling ironbank-modules tag ${MODULES_TAG}"'
    - 'git clone -q --depth 1 --branch "${MODULES_TAG}" "${CI_SERVER_URL}/ironbank-tools/ironbank-modules.git" "${MODULES_CLONE_DIR}"'
    - 'rm -rf "${MODULES_CLONE_DIR}/.git"'
  artifacts:
    when: always
    expire_in: 1 day
    paths:
      - "${MODULES_CLONE_DIR}"

trufflehog:
  tags:
    - ironbank-tools
  image: registry1.dso.mil/ironbank/opensource/trufflehog/trufflehog3:3.0.6
  stage: code-check
  variables:
    # This forces the trufflehog job to NOT perform a shallow clone
    GIT_DEPTH: 0
  script:
    - 'git config --global --add safe.directory "${CI_PROJECT_DIR}"'
    - 'python3 pipeline1/0-setup/trufflehog.py'

lint:
  extends:
    - .setup_modules
  tags:
    - ironbank-tools
  needs:
    - load-scripts
  stage: code-check
  script:
    # required until we update the dev image to use pyproject.toml dev deps
    - pip install radon mypy
    - make lint_all
  artifacts:
    paths:
      - ./pylint/
  cache:
    key: pylint-cache
    paths:
      - ./ironbank_1.stats

bandit:
  tags:
    - ironbank-tools
  stage: code-check
  variables:
    GIT_DEPTH: 1
  script:
    - make run_bandit
  artifacts:
    name: bandit_report
    paths:
      - ./bandit_report.txt
    when: always
  allow_failure: true

format:
  needs:
    - load-scripts
  tags:
    - ironbank-tools
  extends:
    - .setup_modules
  stage: code-check
  script:
    - make format_check_all

unit-testing:
  tags:
    - ironbank-tools
  extends:
    - .setup_modules
  needs:
    - load-scripts
  stage: code-check
  script:
    - python3 -m pip install . --quiet
    - pip install pytest-cov
    - make run_unit_tests
  coverage: '/^TOTAL.+?(\d+\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - ./coverage.xml
