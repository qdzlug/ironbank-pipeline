stages:
  ### preprocess stage
  # clone down the templates directory for use in later stages
  # Requirements:
  # - executor image with git
  - preprocess

  ### lint stage
  # yaml lint (ci file, hardening_manifest.yaml), dockerfile lint, wl compare lint
  # Requirements:
  # - executor image with Python 3.x installed
  - lint

  ### secret-scanning stage
  # trufflehog scan
  # Requirements:
  # -executor image with trufflehog3 installed
  - secret-scanning

  ### pre-build stage
  # download artifacts/clamav scan
  # Requirements:
  # - executor image with Python 3.x installed
  - import-artifacts

  ### artifact scan stage
  # use clamav to scan download artifacts
  # Requirements:
  # - executor image with docker (or podman) installed
  - scan-artifacts

  ### build stage
  # build image w version tag and create tar file

  - build

  ### post-build stage
  # clamav scan of the image
  # REMOVING STAGE, NOT NEEDED FOR BETA
  # - post-build

  ### scanning stage
  # twistlock, oscap, and anchore scans
  - scanning

  ### create csv output
  - csv-output

  ### check cve stage
  - check-cves

  ### Sign image and manifest and write documentation
  - documentation

  ### publish stage
  # publish artifacts to S3 (runs on master), push to harbor
  - publish

  # Removing for development runs
  ### VAT stage (runs on dev)
  # - vat

include:
  # Removing globals template from inclusion so we can overwrite variables.
  # - local: templates/globals.yaml
  - local: stages/preprocess/load-scripts.yaml

  - local: stages/lint/lint.yaml

  - local: stages/lint/trufflehog.yaml

  - local: stages/import-artifacts/base.yaml

  - local: stages/scan-artifacts/clamav-scan.yaml

  - local: stages/build/base.yaml
  # # # Removing post-build stage, not needed for beta
  # # # - local: stages/post-build/base.yaml

  - local: stages/scanning/base.yaml

  - local: stages/csv-output/base.yaml

  - local: stages/check-cves/base.yaml

  - local: stages/documentation/base.yaml

  # Do not want development branch runs to utilize VAT tool
  # - local: stages/vat/base.yaml

  - local: stages/publish/base.yaml

variables:
  # Gitlab CI vars
  ARTIFACT_STORAGE: "ci-artifacts"
  PIPELINE_REPO_DIR: "${ARTIFACT_STORAGE}/ironbank_pipeline"
  GIT_SSL_NO_VERIFY: "1"
  TARGET_BRANCH: development
  WL_TARGET_BRANCH: master

  # Scan reports
  OSCAP_CVE_XML_FILENAME: "report-cve.xml"
  OSCAP_CVE_HTML_FILENAME: "report-cve.html"
