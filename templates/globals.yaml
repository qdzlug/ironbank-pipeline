image: registry1.dso.mil/ironbank/ironbank-pipelines/pipeline-runner:v0.10.12
stages:
  - preprocess
  - validate-container-repository
  - import-artifacts
  - build
  - post-build
  - scan-logic
  - scanning
  - vat
  - post-vat
  - generate-documentation
  - publish-artifacts

include:
  # Variable files that should always be included
  - local: templates/shared_vars.yaml
  - local: templates/setup_modules.yaml

  - local: stages/preprocess/load-scripts.yaml
  - local: stages/validate-container-repository/base.yaml
  - local: stages/import-artifacts/import-artifacts.yaml
  - local: stages/build/base.yaml

  # Skipped scans when all conditions are met
  - local: stages/post-build/base.yaml
    rules:
      - if: $SKIP_SCAN != "true"
      - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "development"
      
  - local: stages/scan-logic/base.yaml
    rules:
      - if: $SKIP_SCAN != "true"
      - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "development"
      
  - local: stages/scanning/base.yaml
    rules:
      - if: $SKIP_SCAN != "true"
      - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "development"
      
  - local: stages/vat/base.yaml
    rules:
      - if: $SKIP_SCAN != "true"
      - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "development"
      
  - local: stages/post-vat/base.yaml
    rules:
      - if: $SKIP_SCAN != "true"
      - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "development"
      
  - local: stages/generate-documentation/base.yaml
    rules:
      - if: $SKIP_SCAN != "true"
      - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "development"

  - local: stages/publish-artifacts/base.yaml
    rules:
      - if: $SKIP_SCAN != "true"
      - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "development"

workflow:
  # rules:
  #   - if: ($SKIP_SCAN == "true") && ($CI_COMMIT_BRANCH != "development") && ($CI_COMMIT_BRANCH != "master")
  #     variables:
  #       IS_SCANNING: "false"
    - if: $CI_COMMIT_BRANCH

variables:
  # Gitlab CI vars
  # several CI vars are passed from the trigger job in trigger.yaml
  # Scan reports
  SCAN_RESULTS: "${ARTIFACT_STORAGE}/scan-results"
  ANCHORE_SCANS: "${SCAN_RESULTS}/anchore"
  TWISTLOCK_SCANS: "${SCAN_RESULTS}/twistlock"
  OSCAP_SCANS: "${SCAN_RESULTS}/openscap"
  OSCAP_CVE_XML_FILENAME: "report-cve.xml"
  OSCAP_CVE_HTML_FILENAME: "report-cve.html"
