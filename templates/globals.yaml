image: registry1.dso.mil/ironbank/ironbank-pipelines/pipeline-runner:v0.9.8
stages:
  - preprocess
  - lint
  - secret-scan
  - import-artifacts
  - build
  - post-build
  - scan-logic
  - scanning
  - vat
  - post-vat
  - csv-output
  - check-cves
  - documentation
  - harbor
  - s3-publish

include:
  - local: stages/preprocess/load-scripts.yaml
  - local: stages/lint/lint.yaml
  - local: stages/secret-scan/trufflehog.yaml
  - local: stages/import-artifacts/import-artifacts.yaml
  - local: stages/build/base.yaml
  - local: stages/post-build/base.yaml
  - local: stages/scan-logic/base.yaml
  - local: stages/scanning/base.yaml
  - local: stages/vat/base.yaml
  - local: stages/post-vat/base.yaml
  - local: stages/csv-output/base.yaml
  - local: stages/check-cves/base.yaml
  - local: stages/documentation/base.yaml
  - local: stages/harbor/harbor.yaml
  - local: stages/s3/upload-to-s3.yaml

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH

variables:
  # Gitlab CI vars
  ARTIFACT_STORAGE: "ci-artifacts"
  PIPELINE_REPO_DIR: "${ARTIFACT_STORAGE}/ironbank_pipeline"
  GIT_SSL_NO_VERIFY: "1"
  TARGET_BRANCH: master
  # WL_TARGET_BRANCH: master

  # Controls if ironbank-staging is the source registry for base images
  STAGING_BASE_IMAGE: ""

  # Scan reports
  OSCAP_CVE_XML_FILENAME: "report-cve.xml"
  OSCAP_CVE_HTML_FILENAME: "report-cve.html"
