vat:
  # checks if project is a pipeline-test-project and if so, prevents job from running
  # else, checks if the branch is development and if so, runs the job if all prior jobs succeed
  stage: pre-publish
  # Load in the IMAGE_VERSION variable from load-scripts env
  needs:
    - setup
    - build
    - scan-logic
    - anchore-scan
    - openscap-compliance
    - twistlock-scan
  extends:
    - .setup_modules
  variables:
    ARTIFACT_DIR: "${ARTIFACT_STORAGE}/vat"
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: vat
  id_tokens:
    VAT_TOKEN:
      aud: ${CI_SERVER_URL}
  script:
    - 'mkdir -p "${ARTIFACT_DIR}"'
    - 'python3 "${PIPELINE_REPO_DIR}/pipeline1/6-pre-publish/vat_import.py"'
  artifacts:
    when: always
    paths:
      - "${ARTIFACT_DIR}/"
    expire_in: 1 week

vat:
  # checks if project is a pipeline-test-project and if so, prevents job from running
  # else, checks if the branch is development and if so, runs the job if all prior jobs succeed
  stage: pre-publish
  # Load in the IMAGE_VERSION variable from load-scripts env
  needs:
    - setup
    - build-arm64
    - scan-logic-arm64
    - anchore-scan-arm64
    - openscap-compliance-arm64
    - twistlock-scan-arm64
  extends:
    - .setup_modules
  variables:
    ARTIFACT_DIR: "${ARTIFACT_STORAGE}/vat"
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: vat
  rules:
    - exists:
      - Dockerfile_arm64
  id_tokens:
    VAT_TOKEN:
      aud: ${CI_SERVER_URL}
  script:
    - 'mkdir -p "${ARTIFACT_DIR}"'
    - 'python3 "${PIPELINE_REPO_DIR}/pipeline1/6-pre-publish/vat_import.py"'
  artifacts:
    when: always
    paths:
      - "${ARTIFACT_DIR}/"
    expire_in: 1 week
